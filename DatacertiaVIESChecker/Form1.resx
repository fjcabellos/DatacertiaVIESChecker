<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiF1JDH5VPkZ9VT1ofVQ8eHtU
        O356Ujl+elI5fnpSOX56Ujl+elI5fnpSOX56Ujl+elI5fnpSOX56Ujl+elM6fn1VPXx8VDxwfVU9WIBX
        QSYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAh11IBnxUPIV6Ujn1elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3tTOsd+VT4wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIteTAR7Uzu5elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOfV+VT4+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfFQ8enpS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOeWFWkYMAAAAAAAAAAAAAAAAAAAAAJNi
        VQR6UjrrelI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/31UPWYAAAAAAAAAAAAA
        AAAAAAAAglhDMHpSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/e1M6pQAA
        AAAAAAAAAAAAAAAAAAB9VDxQelI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/gl1F/6+X
        iP/Htqz/x7as/66Vhv+CXUb/pYp5/6uSg/+Ze2j/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of98UzvHAAAAAAAAAAAAAAAAAAAAAH1VPV56Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/6CE
        cv/18vH///////////////////////b08v/59/b//////8/At/96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3xTO9cAAAAAAAAAAAAAAAAAAAAAelI5YnpSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of+Wd2P/+/r6////////////7unm/+Tc1//6+fj/////////////////z8C3/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/fFM72wAAAAAAAAAAAAAAAAAAAAB7UjpielI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/9/W0P//////+/r6/6aMe/96Ujn/elI5/4NeR//az8j////////////PwLf/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf99VDzfAAAAAAAAAAAAAAAAAAAAAHtSOmJ6Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf+FYEn//v7+///////Esqf/elI5/3pSOf96Ujn/elI5/4RfSP/7+fn//////8/A
        t/96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3xUPN0AAAAAAAAAAAAAAAAAAAAAe1I6YnpS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/5V1Yv///////////6SJeP96Ujn/elI5/3pSOf96Ujn/elI5/+Xd
        2P//////z8C3/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/fFM72wAAAAAAAAAAAAAAAAAA
        AAB7UjpielI5/3pSOf96Ujn/elI5/3pSOf96Ujn/knJe////////////qY9//3pSOf96Ujn/elI5/3pS
        Of96Ujn/6ePf///////PwLf/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf98UzvdAAAAAAAA
        AAAAAAAAAAAAAHtSOWJ6Ujn/elI5/3pSOf96Ujn/elI5/3pSOf9/WED/+/r5///////Xy8P/elI5/3pS
        Of96Ujn/elI5/5NzX//+/v7//////8/At/96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3xT
        O90AAAAAAAAAAAAAAAAAAAAAe1I6YnpSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf/Ov7b/////////
        ///MvbP/j25Z/4VgSf+linn/8Ozq////////////z8C3/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/fFM73QAAAAAAAAAAAAAAAAAAAAB7UjpielI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/4Vh
        Sv/u6eb////////////////////////////////////////////PwLf/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf98VDvdAAAAAAAAAAAAAAAAAAAAAHtSOmJ6Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/4hkTv/YzMX//v7+/////////////v7+/9nNxv/08O7//////8/At/96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3xUO90AAAAAAAAAAAAAAAAAAAAAe1I6YnpSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf+KZlD/oYV0/6GGdP+JZlD/elI5/+7p5v//////z8C3/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/fFQ73QAAAAAAAAAAAAAAAAAAAAB7UjpielI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/7unm////
        ///PwLf/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf98UzvbAAAAAAAAAAAAAAAAAAAAAHtS
        OWJ6Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of/u6eb//////8/At/96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3xTO9sAAAAAAAAAAAAA
        AAAAAAAAfFQ8YHpSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/+7p5v//////z8C3/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/e1M72QAA
        AAAAAAAAAAAAAAAAAAB+VT5WelI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/7unm///////PwLf/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of98UzvLAAAAAAAAAAAAAAAAAAAAAIBXQDp6Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf/u6eb//////8/At/96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3tTO7EAAAAAAAAAAAAAAAAAAAAAjl9PDHpSOfl6Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/+7p5v//////z8C3/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/fVQ8egAAAAAAAAAAAAAAAAAAAAAAAAAAfFM7n3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/e1Q7/3xUPP97Uzv/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOfeBV0EeAAAAAAAAAAAAAAAAAAAAAAAAAACCWEIWelI633pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/fVQ9bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACAVkAee1M7xXpSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5/3pS
        Of96Ujn/elI5/3pSOf96Ujn/elI5/3pSOf96Ujn/elI5831UPWYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACjcWgAf1U/Qn1UPId8VDypfFM7uXtTOr96Ujm/elI5v3pSOb96Ujm/elI5v3pS
        Ob96Ujm/elI5v3pSOb96Ujm/elI5v3xTO717UzuxfFQ8mX1UPGaEWUQUAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////8AAA/8AAAD+AAAAfgAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AA
        AAPgAAAD4AAAB/AAAA/8AAAf//////////8=
</value>
  </data>
</root>